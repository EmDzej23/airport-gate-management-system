## SERVER CONFIGURATION
server.port=9099
server.servlet.context-path=/api/v1


## SPRING DATASOURCE CONFIGURAITON
spring.profiles.active=dev
spring.datasource.url=jdbc:postgresql://localhost:5432/airport
spring.datasource.username=airport
spring.datasource.password=airport
spring.datasource.driver-class-name=org.postgresql.Driver

## HIBERNATE CONFIGURATION
#drop n create table again, good for testing, comment this in production
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect


## CUSTOM SECURITY CONFIGURATION
security.jwt-secret = AirportJwtSecret
security.token-expire-interval-seconds = 3600000

#CORS-ORIGINS
endpoints.cors.allowed-origins = *
endpoints.cors.allowed-methods = OPTIONS,HEAD,GET,POST,PUT,DELETE,PATCH
endpoints.cors.allowed-headers = *
endpoints.cors.max-age = 3600
endpoints.cors.allow-credentials = true

logging.config = classpath:log4j-local.xml
logging.file = ../logs/airport.log
logging.level.com.akredito = debug
logging.level.io.swagger.models.parameters.AbstractSerializableParameter = error